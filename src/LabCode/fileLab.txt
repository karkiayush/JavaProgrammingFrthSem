create file
import java.io.File;
import java.io.IOException;

public class createFile {
    public static void main(String[] args) throws IOException {
        File file = new File("test2.txt");
        System.out.println(file.exists());
        file.createNewFile();

        if(file.exists()){
            System.out.println("File exists");
        }else {
            System.out.println("file not created");
        }
    }
}


read file
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class readFile {
    public static void main(String[] args) throws IOException {
//        if throws IOEcewption JVM will handel it because it is a caller of main method
        FileReader fr = new FileReader("C:\\Users\\nabin\\OneDrive\\Desktop\\Java\\File_Handling\\write.txt");
        if(fr.ready()){
            int data;
            while ((data = fr.read()) != -1) {
//                this will return the integer value of the given data
//                and read single char by char
                System.out.print((char) data);
//                System.out.println(data);
            }
            fr.close();

        }

    }
}


write
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class fileWrite {
    public static void main(String[] args) throws IOException {

//        mostly three ways to write in file fileWriter
//        bufferedWriter
//        printWriter

        try{
            File file = new File("writeTest.txt");
            file.createNewFile();
            FileWriter fw = new FileWriter("writeTest.txt");
            try{
//                file not found exception
                fw.write("String data sdasasasasasas asasasasasas");
                fw.write("next line");
                fw.write("अस्ब्ज्कस ज्ज्कस्ब्कस्क ");
                System.out.println(fw.getEncoding());
                System.out.println(fw.hashCode());
//                In Java, the flush() method is used to flush the contents of a writer's buffer and ensure that any buffered data is immediately written to the underlying file or output stream.
               fw.flush();
            }finally {
                fw.close();
            }
            System.out.println("File has written");
        }catch (IOException e){
            throw e;
        }
    }
}
